/*
 * art-frame -- an artful sands image emulation
 *
 * Copyright (C) 2019 JÃ¼rgen Reuter
 *
 * This file is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation; either version 2 of the License,
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 *
 * As a special exception to the GNU General Public License, if you
 * distribute this file as part of a program that contains a
 * configuration script generated by Autoconf, you may include it
 * under the same distribution terms that you use for the rest of that
 * program.
 *
 * For updates and more info or contacting the author, visit:
 * <https://github.com/soundpaint/art-frame>
 *
 * Author's web site: www.juergen-reuter.de
 */

#ifndef TITLED_DIAL_HH
#define TITLED_DIAL_HH

#include <QtGui/QMouseEvent>
#include <QtWidgets/QDial>

class Titled_dial : public QDial
{
  Q_OBJECT
  Q_PROPERTY(QColor fgColor READ get_fg_color WRITE set_fg_color)
  Q_PROPERTY(QColor bgColor READ get_bg_color WRITE set_bg_color)
  Q_PROPERTY(QColor textColor READ get_text_color WRITE set_text_color)
  Q_PROPERTY(int sliderWidth READ get_slider_width WRITE set_slider_width)
  Q_PROPERTY(int labelFontPointSize
             READ get_label_font_point_size
             WRITE set_label_font_point_size)
public:
  explicit Titled_dial(QWidget *parent);
  virtual ~Titled_dial();
  QSize sizeHint() const;
  void paintEvent(QPaintEvent *paint_event);
  void set_fg_color(const QColor& color);
  QColor get_fg_color() const;
  void set_bg_color(const QColor& color);
  QColor get_bg_color() const;
  void set_text_color(const QColor& color);
  QColor get_text_color() const;
  void set_slider_width(const int width);
  const int get_slider_width() const;
  void set_label_font_point_size(const int point_size);
  const int get_label_font_point_size() const;
protected:
  void mouseMoveEvent(QMouseEvent *event);
  void mousePressEvent(QMouseEvent *event);
  void mouseReleaseEvent(QMouseEvent *event);
  virtual void render_value(QString &str_value, const int value) const;
private:
  static const QColor DEFAULT_FG_COLOR;
  static const QColor DEFAULT_BG_COLOR;
  static const QColor DEFAULT_TEXT_COLOR;
  static const int DEFAULT_SLIDER_WIDTH;
  QColor _fg_color;
  QColor _bg_color;
  QColor _text_color;
  int _slider_width;
  int _label_font_point_size;
};

#endif /* TITLED_DIAL_HH */

/*
 * Local variables:
 *   mode: c++
 *   coding: utf-8
 * End:
 */
