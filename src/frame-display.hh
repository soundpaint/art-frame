/*
 * art-frame -- an artful sands image emulation
 *
 * Copyright (C) 2016, 2019 JÃ¼rgen Reuter
 *
 * This file is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation; either version 2 of the License,
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 *
 * As a special exception to the GNU General Public License, if you
 * distribute this file as part of a program that contains a
 * configuration script generated by Autoconf, you may include it
 * under the same distribution terms that you use for the rest of that
 * program.
 *
 * For updates and more info or contacting the author, visit:
 * <https://github.com/soundpaint/art-frame>
 *
 * Author's web site: www.juergen-reuter.de
 */

#ifndef FRAME_DISPLAY_HH
#define FRAME_DISPLAY_HH

#include <inttypes.h>
#include <QtCore/QObject>
#include <QtCore/QProcess>
#include <QtCore/QString>
#include <QtGui/QColor>
#include <QtGui/QImage>
#include <QtGui/QPen>
#include <QtWidgets/QAction>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QToolBar>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QVBoxLayout>
#include <QtWidgets/QWidget>
#include <iconfig.hh>
#include <sensors.hh>
#include <simulation.hh>

class Frame_display : public QWidget, public IParticles_change_listener
{
  Q_OBJECT
public:
  explicit Frame_display(const uint16_t minimum_width,
			 const uint16_t minimum_height,
			 const IConfig *config,
                         const Sensors *sensors,
                         Particles *particles,
			 QWidget *parent = 0);
  virtual ~Frame_display();
  virtual void particles_changed();
  QSize minimumSizeHint() const Q_DECL_OVERRIDE;
  void handle_sweep(const QPointF pos0, const QPointF pos1,
		    const time_t delta_sec, const suseconds_t delta_usec);
protected:
  void paintEvent(QPaintEvent *event) Q_DECL_OVERRIDE;

private:
  const IConfig *_config;
  const Sensors *_sensors;
  Particles *_particles; // TODO: should be const here (read access only)
  uint16_t _minimum_width, _minimum_height;
  void update_display(const QRect paintRect);
  void sweep_fade_step();
  void draw_particles(QPainter *painter, const QRect rect);
};

#endif /* FRAME_DISPLAY_HH */

/*
 * Local variables:
 *   mode: c++
 *   coding: utf-8
 * End:
 */
