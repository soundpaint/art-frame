/*
 * art-frame -- an artful sands image emulation
 *
 * Copyright (C) 2016, 2019 JÃ¼rgen Reuter
 *
 * This file is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation; either version 2 of the License,
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 *
 * As a special exception to the GNU General Public License, if you
 * distribute this file as part of a program that contains a
 * configuration script generated by Autoconf, you may include it
 * under the same distribution terms that you use for the rest of that
 * program.
 *
 * For updates and more info or contacting the author, visit:
 * <https://github.com/soundpaint/art-frame>
 *
 * Author's web site: www.juergen-reuter.de
 */

#ifndef THERMAL_SENSORS_HH
#define THERMAL_SENSORS_HH

#include <inttypes.h>
#include <QtCore/QTimer>

class Thermal_sensors : public QTimer
{
  Q_OBJECT
public:
  explicit Thermal_sensors(QObject *parent = 0);
  virtual ~Thermal_sensors();
  const double get_vc_temperature() const;
private slots:
  void slot_sample_and_hold();
signals:
  void signal_sample_updated(const double vc_temperature);
private:
  uint64_t _display_timer;
  double _vc_temperature;
};

#endif /* THERMAL_SENSORS_HH */

/*
 * Local variables:
 *   mode: c++
 *   coding: utf-8
 * End:
 */
